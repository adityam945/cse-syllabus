[
  {
    "_id": "5ed8cb3d1f006923206b1f55",
    "subcode": "17CS61 ",
    "subname": "CRYPTOGRAPHY, NETWORK SECURITY AND CYBER LAW ",
    "m1": "Module – 1",
    "m1desc": "Introduction\n - Cyber Attacks, Defence Strategies and Techniques, Guiding Principles, Mathematical Background for Cryptography  - Modulo Arithmetic’s, The Greatest Comma Divisor, Useful Algebraic Structures, Chinese Remainder Theorem, Basics of Cryptography -  Preliminaries, Elementary Substitution Ciphers, Elementary Transport Ciphers, Other Cipher Properties, Secret Key Cryptography – Product Ciphers, DES Construction. ",
    "m2": "Module – 2",
    "m2desc": "Public Key Cryptography and RSA – RSA Operations, Why Does RSA Work?, Performance, Applications, Practical Issues, Public Key Cryptography Standard (PKCS),  Cryptographic Hash -  Introduction, Properties, Construction, Applications and Performance, The Birthday Attack, Discrete Logarithm and its Applications -  Introduction, Diffie-Hellman Key Exchange, Other Applications",
    "m3": "Module – 3",
    "m3desc": "Key Management \n -  Introduction, Digital Certificates, Public Key Infrastructure, Identity–based Encryption, Authentication–I  - One way Authentication, Mutual Authentication, Dictionary Attacks,  Authentication – II – Centalised Authentication, The Needham-Schroeder Protocol, Kerberos, Biometrics, IPSecSecurity at the Network Layer – Security at Different layers: Pros and Cons, IPSec in Action, Internet Key Exchange (IKE) Protocol, Security Policy and IPSEC, Virtual Private Networks, Security at the Transport Layer -  Introduction, SSL Handshake Protocol,  SSL Record Layer Protocol,  OpenSSL",
    "m4": "Module – 4",
    "m4desc": "IEEE 802.11 Wireless LAN Security\n  -  Background, Authentication, Confidentiality and Integrity, Viruses, Worms, and Other Malware, Firewalls – Basics, Practical Issues,  Intrusion Prevention and Detection -  Introduction, Prevention Versus Detection, Types of Instruction Detection Systems, DDoS Attacks Prevention/Detection, Web Service Security – Motivation, Technologies for Web Services, WS- Security, SAML, Other Standards",
    "m5": "Module – 5",
    "m5desc": "IT act aim and objectives, Scope of the act, Major Concepts, Important provisions, Attribution, acknowledgement, and dispatch of electronic records, Secure electronic records and secure digital signatures, Regulation of certifying authorities: Appointment of Controller and Other officers, Digital Signature certificates, Duties of Subscribers, Penalties and adjudication, The cyber regulations appellate tribunal, Offences, Network service providers not to be liable in certain cases,  Miscellaneous Provisions. ",
    "descname": "Text  Books and Reference Books: ",
    "descdata": "Text  Books: \n1. Cryptography, Network Security and Cyber Laws – Bernard Menezes, Cengage Learning, 2010 edition (Chapters-1,3,4,5,6,7,8,9,10,11,12,13,14,15,19(19.119.5),21(21.1-21.2),22(22.1-22.4),25 \n\nReference Books:\n 1. Cryptography and Network Security- Behrouz A Forouzan, DebdeepMukhopadhyay, Mc-GrawHill, 3rd Edition, 2015\n 2. Cryptography and Network Security- William Stallings, Pearson Education, 7th Edition \n3. Cyber Law simplified- VivekSood, Mc-GrawHill, 11th reprint , 2013 \n4. Cyber security and Cyber Laws, Alfred Basta, Nadine Basta, Mary brown, ravindrakumar, Cengage learning ",
    "__v": 0
  },
  {
    "_id": "5ed8cf121f006923206b1f5b",
    "subcode": "17CS62 ",
    "subname": "COMPUTER GRAPHICS AND VISUALIZATION ",
    "m1": "Module – 1",
    "m1desc": "Overview:\n Computer Graphics and OpenGL:\n Computer Graphics:Basics of computer graphics, Application of Computer Graphics, Video Display Devices: Random Scan and Raster Scan displays, color CRT monitors, Flat panel displays. Raster-scan systems: video controller, raster scan  Display processor, graphics workstations and viewing systems, Input devices, graphics networks, graphics on the internet, graphics software. OpenGL: Introduction to OpenGL ,coordinate reference frames, specifying two-dimensional world coordinate reference frames in OpenGL, OpenGL point functions, OpenGL line functions, point attributes, line attributes, curve attributes, OpenGL point attribute functions, OpenGL line attribute functions, Line drawing algorithms(DDA, Bresenham’s), circle generation algorithms(Bresenham’s)",
    "m2": "Module – 2",
    "m2desc": "Fill area Primitives, 2D Geometric Transformations and 2D viewing:\n Fill area Primitives: Polygon fill-areas, OpenGL polygon fill area functions, fill area attributes, general scan line polygon fill algorithm, OpenGL fill-area attribute functions.  2DGeometric Transformations: Basic 2D Geometric Transformations, matrix representations and homogeneous coordinates. Inverse transformations, 2DComposite transformations, other 2D transformations, raster methods for geometric transformations, OpenGL raster transformations, OpenGL geometric transformations function, 2D viewing: 2D viewing pipeline, OpenGL 2D viewing functions. ",
    "m3": "Module – 3",
    "m3desc": "Clipping,3D Geometric Transformations, Color and Illumination Models: Clipping: clipping window, normalization and viewport transformations, clipping algorithms,2D point clipping, 2D line clipping algorithms: cohen-sutherland line clipping only -polygon fill area clipping: Sutherland-Hodgeman polygon clipping algorithm only.3DGeometric Transformations: 3D translation, rotation, scaling, composite 3D transformations, other 3D transformations, affine transformations, OpenGL geometric transformations functions. Color Models: Properties of light, color models, RGB and CMY color models. Illumination Models: Light sources, basic illumination models-Ambient light, diffuse reflection, specular and phong model, Corresponding openGL functions.",
    "m4": "Module – 4",
    "m4desc": "3D Viewing and Visible Surface Detection:\n 3DViewing:3D viewing concepts, 3D viewing pipeline, 3D viewing coordinate parameters , Transformation from world to viewing coordinates, Projection transformation, orthogonal projections, perspective projections, The viewport transformation and 3D screen coordinates. OpenGL 3D viewing functions. Visible Surface Detection Methods: Classification of visible surface Detection algorithms, back face detection, depth buffer method and OpenGL visibility detection functions. ",
    "m5": "Module – 5",
    "m5desc": "Input& interaction, Curves and Computer Animation: Input and Interaction:\n Input devices, clients and servers, Display Lists, Display Lists and Modelling, Programming Event Driven Input, Menus Picking, Building Interactive Models, Animating Interactive programs, Design of Interactive programs, Logic operations .Curved surfaces, quadric surfaces, OpenGL Quadric-Surface and Cubic-Surface Functions, Bezier Spline Curves, Bezier surfaces, OpenGL curve functions. Corresponding openGL functions",
    "descname": "Text  Books and Reference Books:",
    "descdata": "Text  Books:\n 1. Donald Hearn & Pauline Baker: Computer Graphics with OpenGL Version,3rd/ 4thEdition, Pearson Education,2011\n 2. Edward Angel: Interactive Computer Graphics- A Top Down approach with OpenGL, 5th edition. Pearson Education, 2008\n\n Reference Books:\n 1. James D Foley, Andries Van Dam, Steven K Feiner, John F Huges Computer graphics with OpenGL:  pearson education\n 2. Xiang, Plastock : Computer Graphics ,  sham’s outline series, 2nd edition, TMG.\n 3. Kelvin Sung, Peter Shirley, steven Baer : Interactive Computer Graphics, concepts and applications, Cengage Learning\n 4. M MRaiker, Computer Graphics using OpenGL, Filip learning/Elsevier ",
    "__v": 0
  },
  {
    "_id": "5ed8cfb11f006923206b1f5c",
    "subcode": "17CS63 ",
    "subname": "SYSTEM SOFTWARE AND COMPILER DESIGN ",
    "m1": "Module – 1",
    "m1desc": "Introduction to System Software, Machine Architecture of SIC and SIC/XE.\n Assemblers:\n Basic assembler functions, machine dependent assembler features, machine independent assembler features, assembler design options.  Macroprocessors:\n Basicmacro processor functions, ",
    "m2": "Module – 2",
    "m2desc": "Loaders and Linkers:\n Basic Loader Functions, Machine Dependent Loader Features, Machine Independent Loader Features, Loader Design Options, Implementation Examples.",
    "m3": "Module – 3",
    "m3desc": "Introduction:\n Language Processors, The structure of a compiler, The evaluation of programming languages, The science of building compiler, Applications of compiler technology, Programming language basics Lexical Analysis:\n The role of lexical analyzer, Input buffering, Specifications of token, recognition of tokens, lexical analyzer generator, Finite automate. ",
    "m4": "Module – 4",
    "m4desc": "Syntax Analysis:\n Introduction, Role Of Parsers, Context Free Grammars, Writing a grammar, Top Down Parsers, Bottom-Up Parsers, Operator-Precedence Parsing ",
    "m5": "Module – 5",
    "m5desc": "Syntax Directed Translation, Intermediate code generation,  Code generation",
    "descname": "Text  Books and Reference Books:",
    "descdata": "Text  Books:\n 1. System Software  by Leland. L. Beck, D Manjula, 3rd edition, 2012 \n2. Compilers-Principles, Techniques and Tools by Alfred V Aho, Monica S. Lam, Ravi Sethi, Jeffrey D. Ullman.   Pearson, 2nd edition, 2007 \n\nReference Books:\n 1. Systems programming – Srimanta Pal , Oxford university press, 2016\n 2. System programming and Compiler Design, K C Louden, Cengage Learning \n3. System software and operating system by D. M. Dhamdhere  TMG\n 4. Compiler Design, K Muneeswaran, Oxford University Press 2013. ",
    "__v": 0
  },
  {
    "_id": "5ed8cfcc1f006923206b1f5d",
    "subcode": "17CS64 ",
    "subname": "OPERATING SYSTEMS",
    "m1": "Module – 1",
    "m1desc": "Introduction to operating systems, System structures:\n What operating systems do; Computer System organization; Computer System architecture; Operating System structure; Operating System operations; Process management; Memory management; Storage management; Protection and Security; Distributed system; Special-purpose systems; Computing environments. Operating System Services; User - Operating System interface; System calls; Types of system calls; System programs; Operating system design and implementation; Operating System structure; Virtual machines; Operating System generation; System boot.\n  Process Management Process concept:\n Process scheduling; Operations on processes; Inter process communication. ",
    "m2": "Module – 2",
    "m2desc": "Multi-threaded Programming:\n Overview; Multithreading models; Thread Libraries; Threading issues. Process Scheduling: Basic concepts; Scheduling Criteria; Scheduling Algorithms; Multiple-processor scheduling; Thread scheduling.\n Process Synchronization:\n Synchronization: The critical section problem; Peterson’s solution; Synchronization hardware; Semaphores; Classical problems of synchronization;Monitors",
    "m3": "Module – 3",
    "m3desc": "Deadlocks :\n Deadlocks; System model; Deadlock characterization; Methods for handling deadlocks; Deadlock prevention; Deadlock avoidance; Deadlock detection and recovery from deadlock. Memory Management: Memory management strategies:\n Background; Swapping; Contiguous memory allocation; Paging; Structure of page table; Segmentation. ",
    "m4": "Module – 4",
    "m4desc": "Virtual Memory Management:\n Background; Demand paging; Copy-on-write; Page replacement; Allocation of frames; Thrashing.\n File System, Implementation of File System:\n File system: File concept; Access methods; Directory structure;  File system mounting; File sharing;  Protection: Implementing File system: File system structure; File system implementation; Directory implementation; Allocation methods; Free space management.",
    "m5": "Module – 5",
    "m5desc": "Secondary Storage Structures, Protection:\n Mass storage structures; Disk structure; Disk attachment; Disk scheduling; Disk management; Swap space management. Protection: Goals of protection, Principles of protection, Domain of protection, Access matrix, Implementation of access matrix, Access control, Revocation of access rights, Capability- Based systems.\n Case Study:\n The Linux Operating System:\n Linux history; Design principles; Kernel modules; Process management; Scheduling; Memory Management; File systems, Input and output; ",
    "descname": "Text  Books and Reference Books:",
    "descdata": "Text  Books:\n 1. Abraham Silberschatz, Peter Baer Galvin, Greg Gagne, Operating System Principles 7th edition, Wiley-India, 2006.\n\n Reference Books:\n 1. Ann McHoes Ida M Fylnn, Understanding Operating System, Cengage Learning,  6th Edition\n 2. D.M Dhamdhere, Operating Systems: A Concept Based Approach 3rd  Ed, McGraw- Hill, 2013.\n 3. P.C.P. Bhatt, An Introduction to Operating Systems: Concepts and Practice 4th Edition, PHI(EEE), 2014.\n 4. William Stallings Operating Systems: Internals and Design Principles, 6th Edition, Pearson.",
    "__v": 0
  },
  {
    "_id": "5ed8d02f1f006923206b1f5e",
    "subcode": "17CS651 ",
    "subname": "DATA MINING AND DATA WAREHOUSING",
    "m1": "Module – 1",
    "m1desc": "Data Warehousing&modeling:\n Basic Concepts: Data Warehousing: A multitier Architecture, Data warehouse models: Enterprise warehouse,Data mart and virtual warehouse, Extraction, Transformation and loading, Data Cube: A multidimensional data model, Stars, Snowflakes and Fact constellations: Schemas for multidimensional Data models, Dimensions: The role of concept Hierarchies, Measures: Their Categorization and computation, Typical OLAP Operations. ",
    "m2": "Module – 2",
    "m2desc": "Data warehouse implementation& Data mining:\nEfficient Data Cube computation: An overview, Indexing OLAP Data: Bitmap index and join index, Efficient processing of OLAP Queries, OLAP server Architecture ROLAP versus MOLAP Versus HOLAP.: Introduction: What is data mining, Challenges, Data Mining Tasks, Data: Types of Data, Data Quality, Data Preprocessing, Measures of Similarity and Dissimilarity",
    "m3": "Module – 3",
    "m3desc": "Association Analysis:\n Association Analysis: Problem Definition, Frequent Item set Generation, Rule generation. Alternative Methods for Generating Frequent Item sets, FP-Growth Algorithm, Evaluation of Association Patterns. ",
    "m4": "Module – 4",
    "m4desc": "Classification :\nDecision Trees Induction,Method for Comparing Classifiers, Rule Based Classifiers, Nearest Neighbor Classifiers,Bayesian Classifiers",
    "m5": "Module – 5",
    "m5desc": "Clustering Analysis:\n Overview, K-Means, Agglomerative Hierarchical Clustering, DBSCAN, Cluster Evaluation, Density-Based Clustering, GraphBased Clustering, Scalable Clustering Algorithms.",
    "descname": "Text  Books and Reference Books:",
    "descdata": "Text  Books:\n 1. Pang-Ning Tan, Michael Steinbach, Vipin Kumar: Introduction to Data Mining,Pearson, First impression,2014.\n 2. Jiawei Han, MichelineKamber, Jian Pei: Data Mining -Concepts and Techniques, 3rd Edition,Morgan Kaufmann Publisher, 2012.\n\n Reference Books:\n 1. Sam Anahory, Dennis Murray: Data Warehousing in the Real World, Pearson,Tenth Impression,2012.\n 2. Michael.J.Berry,Gordon.S.Linoff: Mastering Data Mining , Wiley Edition, second edtion,2012. ",
    "__v": 0
  },
  {
    "_id": "5ed8d0f41f006923206b1f5f",
    "subcode": "17CS652 ",
    "subname": "SOFTWARE ARCHITECTURE AND DESIGN PATTERNS ",
    "m1": "Module – 1",
    "m1desc": "Introduction:\n what is a design pattern?  describing design patterns, the catalog of design pattern, organizing   the catalog, how design patterns solve design problems, how to select a design pattern, how to use a design pattern. What is object-oriented development? , key concepts of object oriented design other related concepts, benefits and drawbacks of the paradigm ",
    "m2": "Module – 2",
    "m2desc": "Analysis a System:\n overview of the analysis phase, stage 1: gathering the requirements functional requirements specification, defining conceptual classes and relationships, using the knowledge of the domain. Design and Implementation, discussions and further reading.",
    "m3": "Module – 3",
    "m3desc": "Design Pattern Catalog:\n Structural patterns, Adapter, bridge, composite, decorator, facade, flyweight, proxy. ",
    "m4": "Module – 4",
    "m4desc": "Interactive systems and the MVC architecture:\nIntroduction , The MVC architectural pattern, analyzing a simple drawing program , designing the system, designing of the subsystems, getting into implementation , implementing undo operation , drawing incomplete items, adding a new feature , pattern based solutions.",
    "m5": "Module – 5",
    "m5desc": "Designing with Distributed Objects:\n Client server system, java remote method invocation, implementing an object oriented system on the web (discussions and further reading) a note on input and output, selection statements, loops arrays. ",
    "descname": "Text  Books and Reference Books:",
    "descdata": "Text Books: \n1. Object-oriented analysis, design and implementation, brahma dathan,  sarnathrammath, universities  press,2013\n 2. Design patterns, erich gamma, Richard helan, Ralph johman , john vlissides ,PEARSON Publication,2013.\n\n Reference Books:\n 1. Frank Bachmann, RegineMeunier, Hans Rohnert “Pattern Oriented Software Architecture” –Volume 1, 1996.\n 2. William J Brown et al., 'Anti-Patterns: Refactoring Software, Architectures and Projects in Crisis', John Wiley, 1998",
    "__v": 0
  },
  {
    "_id": "5ed8d1be1f006923206b1f60",
    "subcode": "17CS653 ",
    "subname": "OPERATIONS RESEARCH",
    "m1": "Module – 1",
    "m1desc": "Introduction, Linear Programming:\n Introduction: The origin, natureand impact of OR; Defining the problem and gathering data; Formulating amathematical model; Deriving solutions from the model; Testing the model;Preparing to apply the model; Implementation .\n Introduction to Linear Programming Problem (LPP):\n Prototype example, Assumptions of LPP, Formulation of LPP and Graphical method various examples.  ",
    "m2": "Module – 2",
    "m2desc": "Simplex Method – 1:\n The essence of the simplex method; Setting up the simplex method; Types of variables, Algebraof the simplex method; the simplex method in tabular form; Tie breaking inthe simplex method, Big M method, Two phase method.  ",
    "m3": "Module – 3",
    "m3desc": "Simplex Method – 2:\n Duality Theory - The essence of duality theory, Primaldual relationship, conversion of primal to dual problem and vice versa. The dual simplex method. ",
    "m4": "Module – 4",
    "m4desc": "Transportation and Assignment Problems:\n The transportation problem, Initial Basic Feasible Solution (IBFS) by North West Corner Rule method, Matrix Minima Method, Vogel’s Approximation Method. Optimal solution by Modified Distribution Method (MODI).  The Assignment problem; A Hungarian algorithm for the assignment problem. Minimization and Maximization varieties in transportation and assignment problems. ",
    "m5": "Module – 5",
    "m5desc": "Game Theory:\n Game Theory: The formulation of twopersons, zero sum games;  saddle point, maximin and minimax principle, Solving simple games- a prototype example;Games with mixed strategies; Graphical solution procedure.\n Metaheuristics:\n The nature of Metaheuristics, Tabu Search, SimulatedAnnealing, Genetic Algorithms.",
    "descname": "Text  Books and Reference Books:",
    "descdata": "Text  Books:\n 1. D.S. Hira and P.K. Gupta, Operations Research, (Revised Edition), Published by S. Chand & Company Ltd, 2014\n\n Reference Books:\n 1. S Kalavathy, Operation Research, Vikas Publishing House Pvt Limited, 01-Aug-2002 \n2. S D Sharma, Operation Research,KedarNath Ram Nath Publishers. ",
    "__v": 0
  },
  {
    "_id": "5ed8d2d51f006923206b1f61",
    "subcode": "17CS654 ",
    "subname": "DISTRIBUTED COMPUTING SYSTEM ",
    "m1": "Module – 1",
    "m1desc": "Characterization of Distributed Systems:\n Introduction, Examples of DS, Resource sharing and the Web, Challenges\n  System Models:\n Architectural Models, Fundamental Models ",
    "m2": "Module – 2",
    "m2desc": "Inter Process Communication:\n Introduction, API for Internet Protocols, External Data Representation and  Marshalling, Client – Server Communication, Group Communication \n Distributed Objects and RMI:\n Introduction, Communication  between Distributed Objects, RPC, Events and Notifications ",
    "m3": "Module – 3",
    "m3desc": "Operating System Support:\n Introduction, The OS layer, Protection, Processes and Threads, Communication and Invocation , Operating system architecture\n Distributed File Systems: Introduction, File Service architecture, Sun Network File System ",
    "m4": "Module – 4",
    "m4desc": "Time and Global States:\n Introduction, Clocks, events and process status, Synchronizing physical clocks, Logical time and logical clocks, Global states \n Coordination and Agreement:\n Introduction, Distributed mutual exclusion, Elections ",
    "m5": "Module – 5",
    "m5desc": "Distributed Transactions:\n Introduction, Flat and nested distributed transactions, Atomic commit protocols, Concurrency control in distributed transactions, distributed deadlocks ",
    "descname": "Text  Books and Reference Books:",
    "descdata": "Text  Books:\n 1. George Coulouris, Jean Dollimore and Tim Kindberg: Distributed Systems – Concepts and Design, 5thEdition, Pearson Publications, 2009\n\nReference Books:\n 1. Andrew S Tanenbaum: Distributed Operating Systems, 3rd edition, Pearson publication, 2007\n 2. Ajay D. Kshemkalyani and MukeshSinghal, Distributed Computing: Principles, Algorithms and  Systems, Cambridge University Press, 2008\n 3. SunitaMahajan, Seema Shan, “ Distributed Computing”, Oxford University Press,2015  ",
    "__v": 0
  },
  {
    "_id": "5ed8d3ae1f006923206b1f62",
    "subcode": "17CS661 ",
    "subname": "MOBILE APPLICATION DEVELOPMENT",
    "m1": "Module – 1",
    "m1desc": "Get started, Build your first app, Activities, Testing, debugging and using support libraries ",
    "m2": "Module – 2",
    "m2desc": "User Interaction, Delightful user experience, Testing your UI ",
    "m3": "Module – 3",
    "m3desc": "Background Tasks, Triggering, scheduling and optimizing background task ",
    "m4": "Module – 4",
    "m4desc": "All about data, Preferences and Settings, Storing data using SQLite, Sharing data with content providers, Loading data using Loaders ",
    "m5": "Module – 5",
    "m5desc": "Permissions, Performance and Security, Firebase and AdMod, Publish",
    "descname": "Text  Books and Reference Books:",
    "descdata": "Text  Books:\n 1. Google Developer Training, 'Android Developer Fundamentals Course – Concept Reference', Google Developer Training Team, 2017.\n  https://www.gitbook.com/book/google-developer-training/android-developerfundamentals-course-concepts/details (Download pdf file from the above link)\n\nReference Books: \n1. Erik Hellman, “Android Programming – Pushing the Limits”, 1st Edition, Wiley India Pvt Ltd, 2014. \n 2. Dawn Griffiths and David Griffiths, “Head First Android Development”, 1st Edition, O’Reilly SPD Publishers, 2015.\n  3. J F DiMarzio, “Beginning Android Programming with Android Studio”, 4th Edition,  ",
    "__v": 0
  },
  {
    "_id": "5ed8d58a1f006923206b1f64",
    "subcode": "17CS663 ",
    "subname": "WIRELESS NETWORKS AND MOBILE COMPUTING ",
    "m1": "Module – 1",
    "m1desc": "Mobile Communication, Mobile Computing, Mobile Computing Architecture, Mobile Devices Mobile System Networks, Data Dissemination, Mobility Management, Security Cellular Networks and Frequency Reuse, Mobile Smartphone, Smart Mobiles, and Systems Handheld Pocket Computers, Handheld Devices, Smart Systems, Limitations of Mobile Devices  Automotive Systems ",
    "m2": "Module – 2",
    "m2desc": "GSM-Services and System Architecture, Radio Interfaces of GSM, Protocols of GSM Localization, Call Handling Handover, Security, New Data Services, General Packet Radio Service High-speed Circuit Switched Data, DECT,  Modulation, Multiplexing, Controlling the Medium Access Spread Spectrum, Frequency Hopping Spread Spectrum (FHSS),Coding Methods, Code Division Multiple Access, IMT-2000 3G Wireless Communication Standards, WCDMA 3G Communications Standards ,CDMMA2000 3G Communication Standards, Imode, OFDM, High Speed Packet Access (HSPA) 3G Network  Long-term Evolution, WiMaxRel 1.0 IEEE 802.16e, Broadband Wireless Access,4G Networks, Mobile Satellite Communication Networks ",
    "m3": "Module – 3",
    "m3desc": "IP and Mobile IP Network Layers, Packet Delivery and Handover Management  Location Management, Registration, Tunnelling and Encapsulation, Route Optimization Dynamic Host Configuration Protocol, VoIP, IPsec Conventional TCP/IP Transport Layer Protocols, Indirect TCP, Snooping TCP Mobile TCP, Other Methods of Mobile TCP-layer Transmission ,TCP over 2.5G/3G Mobile Networks",
    "m4": "Module – 4",
    "m4desc": "Data Organization,, Database Transactional Models – ACID Rules, Query Processing Data Recovery Process, Database Hoarding Techniques , Data Caching, Client-Server Computing for Mobile Computing and Adaptation  Adaptation Software for Mobile Computing, Power-Aware Mobile Computing, Context-aware Mobile Computing ",
    "m5": "Module – 5",
    "m5desc": "Communication Asymmetry, Classification of Data-delivery Mechanisms, Data Dissemination Broadcast Models, Selective Tuning and Indexing techniques, Digital Audio Broadcasting (DAB), Digital Video Broadcasting  Synchronization, Synchronization Software for Mobile Devices, Synchronization Software for Mobile Devices  \nSyncML-Synchronization Language for Mobile Computing,Sync4J (Funambol), Synchronized Multimedia Markup Language (SMIL) ",
    "descname": "Text  Books and Reference Books:",
    "descdata": "Text  Books:\n 1. Raj kamal: Mobile Computing, 2ND EDITION, Oxford University Press, 2007/2012 \n2. MartynMallik: Mobile and Wireless Design Essentials, Wiley India, 2003\n\n Reference Books:\n 1. Ashok Talukder, RoopaYavagal, Hasan Ahmed: Mobile Computing, Technology, Applications and Service Creation, 2nd Edition, Tata McGraw Hill, 2010.\n 2. ItiSahaMisra: Wireless Communications and Networks, 3G and Beyond, Tata McGraw Hill, 2009.",
    "__v": 0
  },
  {
    "_id": "5ed8d67c1f006923206b1f65",
    "subcode": "17CS664 ",
    "subname": "PYTHON APPLICATION PROGRAMMING ",
    "m1": "Module – 1",
    "m1desc": "Why should you learn to write programs, Variables, expressions and statements, Conditional execution, Functions",
    "m2": "Module – 2",
    "m2desc": "Iteration, Strings, Files ",
    "m3": "Module – 3",
    "m3desc": "Lists, Dictionaries, Tuples, Regular Expressions ",
    "m4": "Module – 4",
    "m4desc": "Classes and objects, Classes and functions, Classes and methods",
    "m5": "Module – 5",
    "m5desc": "Networked programs, Using Web Services, Using databases adn SQL",
    "descname": "Text  Books and Reference Books:",
    "descdata": "Text  Books:\n 1. Charles R. Severance, “Python for Everybody: Exploring Data Using Python 3”, 1st Edition, CreateSpace Independent Publishing Platform, 2016. (http://do1.drchuck.com/pythonlearn/EN_us/pythonlearn.pdf ) (Chapters 1 – 13, 15) \n2. Allen B. Downey, Think Python: How to Think Like a Computer Scientist', 2ndEdition, Green Tea Press, 2015. (http://greenteapress.com/thinkpython2/thinkpython2.pdf) (Chapters 15, 16, 17)(Download pdf files from the above links)\n\n Reference Books:\n 1. Charles Dierbach, 'Introduction to Computer Science Using Python', 1st Edition, Wiley India Pvt Ltd. ISBN-13: 978-8126556014\n 2. Mark Lutz, “Programming Python”, 4th Edition, O’Reilly Media, 2011.ISBN-13: 978-9350232873",
    "__v": 0
  },
  {
    "_id": "5ed8d81b1f006923206b1f67",
    "subcode": "17CS665 ",
    "subname": "SERVICE ORIENTED ARCHITECTURE ",
    "m1": "Module – 1",
    "m1desc": "SOA BASICS:\nSoftware Architecture;Need for Software Architecture, Objectives of Software Architecture, Types of IT Architecture, Architecture Patterns and Styles,\n Service oriented Architecture;Service Orientation in Daily Life, Evolution of SOA, Drives for SOA, Dimension of SOA, Key components, perspective of SOA, \nEnterprise-wide SOA; Considerations for Enterprise-Wide SOA, Strawman Architecture For Enterprise-Wide-SOA-Enterprise, SOALayers, Application Development Process, SOA Methodology For Enterprise",
    "m2": "Module – 2",
    "m2desc": "Enterprise Applications;\nArchitecture Considerations, Solution Architecture for enterprise application, Software platforms for enterprise Applications;Package Application Platforms, Enterprise Application Platforms, Service-oriented-Enterprise Applications; Considerations for Service-Oriented Enterprise Applications, Patterns for SOA, Pattern-Based Architecture for Service-Oriented Enterprise Application(java reference model only).Composite Applications, SOA programming models",
    "m3": "Module – 3",
    "m3desc": "SOA ANALYSIS AND DESIGN;Need For Models, Principles of Service Design, Design of Activity Services, Design of Datasevices, Design of Client services and Design of business process services, Technologies of SOA;Technologies For Service Enablement, Technologies For Service Integration, Technologies for Service orchestration",
    "m4": "Module – 4",
    "m4desc": "Business case for SOA; Stakeholder OBJECTIVES, Benefits of SOA, Cost Savings, Return on Investment, SOA Governance, Security and implementation; SOA Governance, SOA Security, approach for enterprise wide SOA implementation,Trends in SOA; Technologies in Relation to SOA, Advances in SOA.",
    "m5": "Module – 5",
    "m5desc": "SOA Technologies-PoC;Loan Management System(LMS), PoC-Requirements Architectures of LMS SOA based integration;integrating existing application, SOA best practices, Basic SOA using REST. Role of WSDL,SOAP and JAVA/XML Mapping in SOA. ",
    "descname": "Text  Books and Reference Books:",
    "descdata": "Text  Books:\n 1. Shankar Kambhampaly, “Service–Oriented Architecture for Enterprise Applications”,Wiley Second Edition, 2014.\n  2. Mark D. Hansen, “SOA using Java Web Services”, Practice Hall, 2007.\n\n Reference Books:\n 1. WaseemRoshen, “SOA-Based Enterprise Integration”, Tata McGraw-HILL,2009",
    "__v": 0
  },
  {
    "_id": "5ed8e39f1f006923206b1f68",
    "subcode": "17CS666 ",
    "subname": "MULTI-CORE ARCHITECTURE AND PROGRAMMING ",
    "m1": "Module – 1",
    "m1desc": "Introduction to Multi-core Architecture:\n Motivation for Concurrency in software, Parallel Computing Platforms, Parallel Computing in Microprocessors, Differentiating Multi-core Architectures from Hyper- Threading Technology, Multi-threading on Single-Core versus Multi-Core Platforms Understanding Performance, Amdahl’s Law, Growing Returns: Gustafson’s Law.\nOverview of Threading : \nDefining Threads, System View of Threads, Threading above the Operating System, Threads inside the OS, Threads inside the Hardware, What Happens When a Thread Is Created, Application  Programming Models and Threading, Virtual Environment: VMs and Platforms, Runtime Virtualization, System Virtualization",
    "m2": "Module – 2",
    "m2desc": "Fundamental Concepts of Parallel Programming :\nDesigning for Threads, Task Decomposition, Data Decomposition, Data Flow Decomposition, Implications of Different Decompositions, Challenges You’ll Face, Parallel Programming Patterns, A Motivating Problem: Error Diffusion, Analysis of the Error Diffusion Algorithm, An Alternate Approach: Parallel Error Diffusion, Other Alternatives.\nThreading and Parallel Programming Constructs:\n\n Synchronization, Critical Sections, Deadlock, Synchronization Primitives, Semaphores, Locks, Condition Variables, Messages, Flow Control- based Concepts, Fence, Barrier, Implementation-dependent Threading Features ",
    "m3": "Module – 3",
    "m3desc": "Threading APIs :\nThreadingAPls for Microsoft Windows, Win32/MFC Thread APls, Threading APls for Microsoft. NET Framework, Creating Threads, Managing Threads, Thread Pools, Thread Synchronization, POSIX Threads, Creating Threads, Managing Threads, Thread Synchronization, Signaling, Compilation and Linking. ",
    "m4": "Module – 4",
    "m4desc": "OpenMP: A Portable Solution for Threading :\n Challenges in Threading a Loop, Loop-carried Dependence, Data-race Conditions, Managing Shared and Private Data, Loop Scheduling and Portioning, Effective Use of Reductions, Minimizing Threading Overhead, Work-sharing Sections, Performance-oriented Programming, Using Barrier and No wait, Interleaving Single-thread and Multithread Execution, Data Copy-in and Copy-out, Protecting Updates of Shared Variables, Intel Task queuing Extension to OpenMP, OpenMP Library Functions, OpenMP Environment Variables, Compilation, Debugging, performance.",
    "m5": "Module – 5",
    "m5desc": "Solutions to Common Parallel Programming Problems :\n Too Many Threads, Data Races, Deadlocks, and Live Locks, Deadlock, Heavily Contended Locks Priority Inversion, Solutions for Heavily Contended Locks, Non-blocking Algorithms, ABA Problem, Cache Line Ping-ponging, Memory Reclamation Problem, Recommendations, Thread-safe Functions and Libraries, Memory Issues, Bandwidth, Working in the Cache, Memory Contention, Cache-related Issues, False Sharing, Memory Consistency, Current IA-32 Architecture, Itanium Architecture, High-level Languages, Avoiding Pipeline Stalls on IA-32,Data Organization for High Performance.",
    "descname": "Text  Books and Reference Books:",
    "descdata": "Text  Books:\n 1. Multicore Programming , Increased Performance through Software Multi-threading by ShameemAkhter and Jason Roberts  , Intel Press , 2006. ",
    "__v": 0
  }
]
